<%- include ('adminHeader') %>

<style>
  #image-preview {
    display: flex;
    flex-wrap: wrap;
  }
  .preview-container {
    position: relative;
    width: 150px;
    height: 150px;
    border: 2px solid #ddd;
    border-radius: 5px;
    overflow: hidden;
    margin: 5px;
  }
  .preview-container img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  .remove-btn {
    position: absolute;
    top: 5px;
    right: 5px;
    background-color: rgba(34, 148, 53, 0.8);
    border: none;
    border-radius: 50%;
    padding: 5px;
    cursor: pointer;
  }
</style>
<section class="content-main">
    <div class="content-header">
      <div>
        <h2 class="content-title card-title">Add Products</h2>
      </div>
    </div>
    
    <!-- card-header end// -->
    <div class="container">
<div class="row justify-content-center">
  <div class="col-md-6">
    <div class="card">
      <div class="card-body">
        <!-- <h1 class="card-title text-center mb-4">Edit User</h1> -->
        <div class="container mt-5">
<!-- <h2 class="mb-4">Add Product</h2> -->
<form action="/admin/product" method="post" enctype="multipart/form-data">
<div class="form-group">
  <p id="name-error"></p>
  <label for="productName" style="color:rgb(0, 0, 0); font-size: medium;">Product Name: </label>
  <input type="text" class="form-control" id="productName" placeholder="Product name" onkeyup="validateName()" name="prodName" minlength="4" required>
</div>
<div class="form-group" style="padding-top: 3%;">
  <p class="help-block text-danger" id="disc_error"></p>
  <label for="productDescription" style="color:rgb(0, 0, 0); font-size: medium;">Product Description:</label>
  <textarea class="form-control" id="productDescription" rows="3" placeholder="Product description" onkeyup="validateDiscription()" name="prodDesc" minlength="10" maxlength="100" required></textarea>
</div>
<p id="price-error"></p>
<div class="form-group" style="padding-top: 3%;">
  <label for="productPrice" style="color:rgb(0, 0, 0); font-size: medium;">Product Price:</label>
  <input type="number" min="0" class="form-control" id="productPrice" placeholder="Product price" name="prodRate" onkeyup="proPrice()" required>
</div>
<p id="offer-error"></p>
<div class="form-group">
  <label for="productPrice"  style="color:rgb(0, 0, 0); font-size: medium;">Offer</label>
  <input type="number" onkeyup="discountPrice(); proOffer()" min="0" placeholder="Product offer" class="form-control" id="offerValue" max="99" name="offer" >
</div>
<div class="form-group">
  <div class="input-group mb-3">
    <input type="text" class="form-control" hidden placeholder="Username" aria-label="Username"
 aria-describedby="basic-addon1" value="" readonly id="discountAmount" name="discount">
  </div>
</div>
<p id="cat-error"></p>
<div class="form-group" style="padding-top: 3%;">
  <label for="productCategory" style="color:rgb(0, 0, 0); font-size: medium;">Product Category:</label>
  <select class="form-control" id="productCategory" onkeyup="catOffer()" name="category" required>
    
    <option value="" selected disabled>Choose a category</option>
    <% for(let a of category) { %>
     <option value="<%=a.name %>"><%=a.name %></option> 
    <% } %>
  </select>
</div>
<p id="qty-error"></p>
<div class="form-group" style="padding-top: 3%;">
  <label for="productQuantity" min="0" style="color:rgb(0, 0, 0); font-size: medium;">Product Quantity:</label>
  <input type="number" class="form-control" onkeyup="proqty()" min="0" id="productQuantity" placeholder="Product quantity" name="quantity" required>
</div>
<p id="img-error"></p>
<div class="form-group" style="padding-top: 3%;">
  <label for="productImage" style="color:rgb(0, 0, 0); font-size: medium;">Product Image:</label><br>
  <input type="file" class="form-control-file form-control" id="productImage" onclick="imgup()" accept="image/*" name="images"  multiple accept="image/*" required>
</div>
<br>
<span id="submit-error"></span>
<div id="image-preview" class="mt-3"></div>
<br><br>
<button type="submit" onclick="validateForm()" class="btn btn-primary" >Save it</button>
<a style="margin-left:40%" href="/admin/product" class="btn btn-danger">Go Back</a>
</form>
<p id="demo"></p>
</div>
         </div>
    </div>
  </div>
</div>
</div>
    <!-- row.// -->
    
  </section>

  <script>
    function discountPrice() {
      const offer = document.getElementById('offerValue').value
      const price = document.getElementById('productPrice').value
      console.log(offer, 'offer', price, 'price')
      let sum = offer * price
      let dis = sum / 100
      let offerPrice = Math.floor(price - dis)
      document.getElementById('discountAmount').value = offerPrice
    }
  </script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

<script>
document.getElementById('productImage').addEventListener('change', function(event) {
  var files = event.target.files;
  var imagePreview = document.getElementById('image-preview');
  imagePreview.innerHTML = ''; // Clear previous previews
  var selectedFiles = []; // Track selected files
  
  for (var i = 0; i < files.length; i++) {
    var file = files[i];
    selectedFiles.push(file); // Add file to selectedFiles array
    
    var reader = new FileReader();
    
    reader.onload = (function(file) {
      return function(e) {
        var previewContainer = document.createElement('div');
        previewContainer.className = 'preview-container';
        var img = document.createElement('img');
        img.src = e.target.result;
        previewContainer.appendChild(img);
        
        var removeBtn = document.createElement('button');
        removeBtn.textContent = 'X';
        removeBtn.className = 'remove-btn btn btn-danger';
        removeBtn.addEventListener('click', function() {
          // Remove the preview container when the remove button is clicked
          previewContainer.remove();
          
          // Filter out the removed file from selectedFiles
          selectedFiles = selectedFiles.filter(function(f) {
            return f !== file;
          });
          
          // Replace the input element with a clone excluding the removed file
          replaceInput(selectedFiles);
        });
        previewContainer.appendChild(removeBtn);
        
        imagePreview.appendChild(previewContainer);
      };
    })(file);
    
    reader.readAsDataURL(file);
  }
});

function replaceInput(files) {
  var newInput = document.createElement('input');
  newInput.type = 'file';
  newInput.id = 'productImage';
  newInput.className = 'form-control';
  newInput.accept = 'image/*';
  newInput.multiple = true;
  newInput.addEventListener('change', function(event) {
    // Trigger the change event to update the preview with new files
    event.target.dispatchEvent(new Event('change'));
  });

  // Create a new FileList object
  var fileList = new DataTransfer();
  for (var i = 0; i < files.length; i++) {
    fileList.items.add(files[i]);
  }
  newInput.files = fileList.files;

  document.getElementById('productImage').parentNode.replaceChild(newInput, document.getElementById('productImage'));
}
</script>
<script>
 var nameError = document.getElementById('name-error');
 var discError = document.getElementById('disc_error');
 var priceError = document.getElementById('price-error');
 var proError = document.getElementById('offer-error');
 var catError = document.getElementById('cat-error'); 
 var qtyError = document.getElementById('qty-error'); 
 var imgError = document.getElementById('img-error');
 var submitError = document.getElementById('submit-error');




 function validateName()
    {
        var name = document.getElementById('productName').value;
        if(name.length ==0)
        {
            nameError.innerHTML ='<p class="help-block text-danger">Product name is required !</p>';
            return false;
        }
        if(!name.match(/^[A-Za-z]/)){
            nameError.innerHTML ='<p class="help-block text-danger">Product name Invalid !</p>';
            return false;
            
        }
        nameError.innerHTML ="";
        return true;
    }

 
  function validateDiscription()
      {
          var disc = document.getElementById('productDescription').value;
          var required =25;
           var left = required - disc.length;
          if(disc.length == 0)
          {
              disc_error.innerHTML ='<p class="help-block text-danger">product discription is required</p>';
              return false;
          }
          if(left>0)
          {

              discError.innerHTML = left +' more characters required';
              return false;
            
          }
              discError.innerHTML ="";
              return true;
      }
 
  function proPrice()
    {

        var price = document.getElementById('productPrice').value;
        if(price==0)
        {
          priceError.innerHTML='<p class="help-block text-danger"> Price can not be empty </p>';
          return false;
        }
       if(price<0){
        priceError.innerHTML='<p class="help-block text-danger"> Invalid input! Please enter a positive number.</p>' ;
        return false;

       }
        priceError.innerHTML ="";
        return true;


    }


  function proOffer()
    {
      var offerprice = document.getElementById('offerValue').value;
      if(offerprice=="")
      {
        proError.innerHTML= '<p class="help-block text-danger"> Please Enter the offer';
        return false;
      }
      if(offerprice<0)
      {
        proError.innerHTML= '<p class="help-block text-danger"> Invalid Offer Value! Please Enter a Positive Number';
        return false;
      }
        proError.innerHTML="";
        return true;
    
    }

  function catOffer()
    {
      var procat = document.getElementById('productCategory').value;
      if(procat=="")
      {
        catError.innerHTML='<p class="help-block text-danger"> select any category.</p>';
         return false;
      }
        catError.innerHTML="";
        return true;

    }


    function proqty()
    {

        var proqty = document.getElementById('productQuantity').value;
        if(proqty==0)
        {
          qtyError.innerHTML='<p class="help-block text-danger"> Quantity can not be empty </p>';
          return false;
        }
       if(proqty<0){
        qtyError.innerHTML='<p class="help-block text-danger"> Invalid input! Please enter a positive number.</p>' ;
        return false;

       }
       qtyError.innerHTML ="";
        return true;


    }

    function validateImageUpload()
    {
    var fileInput = document.getElementById('productImage');
    var file = fileInput.files[0];
    var allowedExtensions = /(\.jpg|\.jpeg|\.png|\.gif)$/i; // Define allowed image file extensions

    if (!file) {
        // No file selected
        imageError.innerHTML = '<p class="help-block text-danger">Please select an image.</p>';
        return false;
    }

    if (!allowedExtensions.exec(file.name)) {
        // Invalid file type
        imageError.innerHTML = '<p class="help-block text-danger">Invalid file type. Only JPG, JPEG, PNG, or GIF files are allowed.</p>';
        return false;
    }

    // Add any additional validation rules here, such as file size

    imageError.innerHTML = ""; // Clear any previous error message
    return true;
  }


  function validateForm()
    {
        if(!validateName() || !validateDiscription() || !proPrice() || !proOffer() || !catOffer() || !proqty() || !alidateImageUpload())
        {
            submitError.style.display ='block';
            submitError.style.color ='red';
            submitError.innerHTML = 'please fill the all field';
            setTimeout(function(){submitError.style.display ='none';}, 3000);
            return false;
          
        }
    }

  
</script>
  <%- include ('adminFooter') %>